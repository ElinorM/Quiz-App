<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="02b0eca9-5a86-437d-905b-78f64b885b12" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/src/pages/quiz/components/questionPage/questionPage.test.tsx" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/pages/quiz/quiz.test.tsx" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="tsconfig.json" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/sdk/go1.22.5" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 3
}</component>
  <component name="ProjectId" id="2qOLofg6PCdXHBFkiKnoH1KhB6E" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Jest.QuestionPage.executor": "Run",
    "Jest.QuestionPage.should call updateSelectedOption on radio button click.executor": "Run",
    "Jest.QuestionPage.should render question title.executor": "Run",
    "Jest.QuestionPage.should render radio buttons.executor": "Run",
    "Jest.Quiz.should display the ScorePage when the quiz is submitted.executor": "Run",
    "Jest.Quiz.should show the next question when Next is clicked.executor": "Run",
    "Jest.QuizButtons.executor": "Run",
    "Jest.QuizButtons.should call onCloseModal on cancel button click.executor": "Run",
    "Jest.QuizButtons.should call setQuestionCount on next button click.executor": "Run",
    "Jest.QuizButtons.should call setQuestionCount on previous button click.executor": "Run",
    "Jest.QuizButtons.should disable next button if no option is selected.executor": "Run",
    "Jest.QuizButtons.should disable submit button if no option is selected.executor": "Run",
    "Jest.QuizButtons.should not render previous button if questionCount equals 0.executor": "Run",
    "Jest.QuizButtons.should render previous button if questionCount > 0.executor": "Run",
    "Jest.ScorePage.executor": "Run",
    "Jest.ScorePage.should diplay score 0 if all answers are wrong.executor": "Run",
    "Jest.ScorePage.should diplay score 100 if all answers are correct.executor": "Run",
    "Jest.ScorePage.should display score according to correct answers.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.automatic.dependencies.download": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "go.import.settings.migrated": "true",
    "go.sdk.automatically.set": "true",
    "last_opened_file_path": "/Users/elinor/Projects/quiz-app",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "nodejs.jest.jest_package": "/Users/elinor/Projects/quiz-app/node_modules/react-scripts",
    "nodejs_package_manager_path": "npm",
    "ts.external.directory.path": "/Users/elinor/Projects/quiz-app/node_modules/typescript/lib"
  }
}]]></component>
  <component name="RunManager" selected="Jest.Quiz.should display the ScorePage when the quiz is submitted">
    <configuration name="QuestionPage" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/react-scripts" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="SUITE" />
      <test-file value="$PROJECT_DIR$/src/pages/quiz/components/questionPage/questionPage.test.tsx" />
      <test-names>
        <test-name value="QuestionPage" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="QuestionPage.should call updateSelectedOption on radio button click" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/react-scripts" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/pages/quiz/components/questionPage/questionPage.test.tsx" />
      <test-names>
        <test-name value="QuestionPage" />
        <test-name value="should call updateSelectedOption on radio button click" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="QuestionPage.should render question title" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/react-scripts" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/pages/quiz/components/questionPage/questionPage.test.tsx" />
      <test-names>
        <test-name value="QuestionPage" />
        <test-name value="should render question title" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="Quiz.should display the ScorePage when the quiz is submitted" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/react-scripts" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/pages/quiz/quiz.test.tsx" />
      <test-names>
        <test-name value="Quiz" />
        <test-name value="should display the ScorePage when the quiz is submitted" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="Quiz.should show the next question when Next is clicked" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/react-scripts" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/src/pages/quiz/quiz.test.tsx" />
      <test-names>
        <test-name value="Quiz" />
        <test-name value="should show the next question when Next is clicked" />
      </test-names>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Jest.Quiz.should display the ScorePage when the quiz is submitted" />
        <item itemvalue="Jest.Quiz.should show the next question when Next is clicked" />
        <item itemvalue="Jest.QuestionPage" />
        <item itemvalue="Jest.QuestionPage.should call updateSelectedOption on radio button click" />
        <item itemvalue="Jest.QuestionPage.should render question title" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-33c477a475b1-e0158606a674-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-241.19072.18" />
        <option value="bundled-js-predefined-1d06a55b98c1-0b3e54e931b4-JavaScript-GO-241.19072.18" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>